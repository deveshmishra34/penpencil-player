/*! @name videojs-seek-buttons @version 1.0.0 @license MIT */ !(function(t, r) {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = r(require("video.js")))
    : "function" == typeof define && define.amd
    ? define(["video.js"], r)
    : ((t = t || self).videojsSeekButtons = r(t.videojs));
})(this, function(t) {
  "use strict";
  function r(t, r) {
    (t.prototype = Object.create(r.prototype)),
      (t.prototype.constructor = t),
      (t.__proto__ = r);
  }
  t = t && t.hasOwnProperty("default") ? t.default : t;
  var e = "1.0.0",
    o = t.getComponent("Button"),
    n = { direction: "forward", seconds: 10 },
    s = (function(e) {
      function o(r, o) {
        var s;
        return (
          ((s = e.call(this, r, o) || this).options = t.mergeOptions(n, o)), s
        );
      }
      r(o, e);
      var s = o.prototype;
      return (
        (s.buildCSSClass = function t() {
          return (
            "vjs-seek-button vjs-skip-" +
            this.options_.direction +
            " vjs-icon-replay " +
            ("vjs-skip-" + this.options_.seconds) +
            " " +
            e.prototype.buildCSSClass.call(this)
          );
        }),
        (s.handleClick = function t(r) {
          var e = this.options.direction,
            o = this.options.seconds,
            n = this.player().remainingTime();
          switch (e) {
            case "forward":
              if (
                (r.target.classList.add("vjs-skip-forward-anim"),
                setTimeout(function() {
                  r.target.classList.remove("vjs-skip-forward-anim");
                }, 100),
                n < o)
              )
                return;
              this.player_.currentTime(this.player_.currentTime() + o);
              break;
            case "backward":
              r.target.classList.add("vjs-skip-backward-anim"),
                setTimeout(function() {
                  r.target.classList.remove("vjs-skip-backward-anim");
                }, 100),
                this.player_.currentTime(this.player_.currentTime() - o);
          }
        }),
        o
      );
    })(o);
  (s.defaultState = {}), (s.VERSION = e), t.registerComponent("seekButton", s);
  var i = t.getPlugin("plugin"),
    a = {
      forward: { direction: "forward", seconds: 10 },
      backward: { direction: "backward", seconds: 10 }
    },
    l = (function(e) {
      function o(r, o) {
        var n;
        return (
          ((n = e.call(this, r) || this).options = t.mergeOptions(a, o)),
          n.player.ready(function() {
            n.player.addClass("vjs-seek-buttons"),
              n.options &&
                n.options.forward &&
                ((n.player.controlBar.seekForward = n.player.controlBar.addChild(
                  "seekButton",
                  n.options.forward
                )),
                n.player.controlBar
                  .el()
                  .insertBefore(
                    n.player.controlBar.seekForward.el(),
                    n.player.controlBar.el().firstChild.nextSibling
                  )),
              n.options &&
                n.options.backward &&
                ((n.player.controlBar.seekBackward = n.player.controlBar.addChild(
                  "seekButton",
                  n.options.backward
                )),
                n.player.controlBar
                  .el()
                  .insertBefore(
                    n.player.controlBar.seekBackward.el(),
                    n.player.controlBar.el().firstChild.nextSibling
                  ));
          }),
          n
        );
      }
      return r(o, e), o;
    })(i);
  return (
    (l.defaultState = {}),
    (l.VERSION = e),
    t.registerPlugin("seekButtons", l),
    l
  );
});
